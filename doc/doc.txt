CONTROL模块：
输入：
Inst 	STD_LOGIC_VECTOR(15 DOWNTO 0)

A 	STD_LOGIC_VECTOR(15 DOWNTO 0)

B 	STD_LOGIC_VECTOR(15 DOWNTO 0)

Imm 	STD_LOGIC_VECTOR(15 DOWNTO 0)

T 	STD_LOGIC

输出：
OP 	STD_LOGIC_VECTOR(3 DOWNTO 0)
0000 	A+B
0001 	A-B
0010 	A&&B
0011 	A||B
0100 	A XOR B
0101	NOT A
0110	A sll B
0111	A srl B
1000 	A sra B
1001 	A rol B
1010 	A
1011 	B
OTHERS 	0

PCctrl 	STD_LOGIC_VECTOR(1 DOWNTO 0)
00	PC=PC+1
01	PC=PC+Imm
10	PC=RX
11	PC=RX

RFctrl 	STD_LOGIC_VECTOR(2 DOWNTO 0)
000	NONE
001	取R[I[10-8]]的值，从A口输出
010	取R[I[10-8]]、R[I[7-5]]的值，分别从A、B口输出
011	取R[I[7-5]]的值，从A口输出
100	取SP的值，从A口输出
101	取RA的值，从A口输出
110	取IH的值，从A口输出
111	取SP的值，从A口输出，再取R[I[10-8]]的值，从B口输出

Immctrl	STD_LOGIC_VECTOR(3 DOWNTO 0)
0000	NONE
0001	取I[7-0]符号扩展
0010	取I[3-0]符号扩展
0011	取I[10-0]符号扩展
0100	取I[7-0]零扩展
0101	取I[4-0]符号扩展
0110	取I[3-0]零扩展
0111	取I[4-2]进行扩展：若I[4-2]="000"则扩展为"00..01000"，否则零扩展
1000	输出1
OTHERS	NONE

Rs 	STD_LOGIC_VECTOR(3 DOWNTO 0) 对应RF的A出口
0000	R0
0001	R1
0010	R2
0011	R3
0100	R4
0101	R5
0110	R6
0111	R7
1000	SP
1001	IH
1010	RA
OTHERS	NONE

Rt 	STD_LOGIC_VECTOR(3 DOWNTO 0) 对应RF的B出口
同Rs

Rd 	STD_LOGIC_VECTOR(3 DOWNTO 0)
同Wctrl

AccMEM	STD_LOGIC
0	MEMOUT=ALUOUT
1	MEMOUT=DataOUT

memWE 	STD_LOGIC
0	不进行内存写
1	进行内存写

regWE	STD_LOGIC
0	不进行回写
1	进行回写

DataIN 	STD_LOGIC_VECTOR(15 DOWNTO 0)
若进行内存写，写入的数据

ALUIN1	STD_LOGIC_VECTOR(15 DOWNTO 0)
ALU运算数1

ALUIN2	STD_LOGIC_VECTOR(15 DOWNTO 0)
ALU运算数2

newT 	STD_LOGIC
新的T寄存器值

TE	STD_LOGIC
T寄存器的写使能



ALU模块：
输入：
OP	STD_LOGIC_VECTOR(3 DOWNTO 0)
0000 	A+B
0001 	A-B
0010 	A&&B
0011 	A||B
0100 	A XOR B
0101	NOT A
0110	A sll B
0111	A srl B
1000 	A sra B
1001 	A rol B
1010 	A
1011 	B
OTHERS 	0

ALUIN1	STD_LOGIC_VECTOR(15 DOWNTO 0)

ALUIN2	STD_LOGIC_VECTOR(15 DOWNTO 0)

输出：
ALUOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)



Imm模块：
输入：
Immctrl STD_LOGIC_VECTOR(3 DOWNTO 0)
0000	NONE
0001	取I[7-0]符号扩展
0010	取I[3-0]符号扩展
0011	取I[10-0]符号扩展
0100	取I[7-0]零扩展
0101	取I[4-0]符号扩展
0110	取I[3-0]零扩展
0111	取I[4-2]进行扩展：若I[4-2]="000"则扩展为"00..01000"，否则零扩展
1000	输出1
OTHERS	NONE

Inst 	STD_LOGIC_VECTOR(10 DOWNTO 0) 发送Inst[10-0]

输出：
Imm	STD_LOGIC_VECTOR(15 DOWNTO 0)



IM模块：
输入：
PC	STD_LOGIC_VECTOR(15 DOWNTO 0)

clk	STD_LOGIC

rst	STD_LOGIC

输出：
Ram2OE	STD_LOGIC

Ram2WE	STD_LOGIC

Ram2EN	STD_LOGIC

Ram2Addr	STD_LOGIC_VECTOR(17 DOWNTO 0)

Inst  STD_LOGIC_VECTOR(15 DOWNTO 0)

双向：
Ram2Data	STD_LOGIC_VECTOR(15 DOWNTO 0)



***DM模块：不再由张轩负责的板块***
DM模块：
输入：
ALUout	STD_LOGIC_VECTOR(15 DOWNTO 0)
访问的地址

ACCMEM	STD_LOGIC
0	不进行内存读
1	进行内存读

memWE 	STD_LOGIC
0	不进行内存写
1	进行内存写

DataIN	STD_LOGIC_VECTOR(15 DOWNTO 0)
写入的数据

clk	STD_LOGIC

rst	STD_LOGIC

输出：
Ram1OE	STD_LOGIC

Ram1WE	STD_LOGIC

Ram1EN	STD_LOGIC

Ram1Addr	STD_LOGIC_VECTOR(17 DOWNTO 0)

UARTEN	STD_LOGIC
0	使用串口
1	不使用串口

DataOUT STD_LOGIC_VECTOR(15 DOWNTO 0)

双向：
Ram1Data	STD_LOGIC_VECTOR(15 DOWNTO 0)



ALUMUX1模块：
输入：
A	STD_LOGIC_VECTOR(15 DOWNTO 0)

NPC	STD_LOGIC_VECTOR(15 DOWNTO 0)

ALUOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

MEMOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

ALUctrl1	STD_LOGIC_VECTOR(1 DOWNTO 0)
0X	A
10	ALUOUT
11	MEMOUT

输出：
ALUIN1	STD_LOGIC_VECTOR(15 DOWNTO 0)



ALUMUX2模块：
输入：
B	STD_LOGIC_VECTOR(15 DOWNTO 0)

Imm	STD_LOGIC_VECTOR(15 DOWNTO 0)

ALUOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

MEMOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

ALUctrl2	STD_LOGIC_VECTOR(1 DOWNTO 0)
0X	B
10	ALUOUT
11	MEMOUT

输出：
ALUIN2	STD_LOGIC_VECTOR(15 DOWNTO 0)



PCMUX模块：
输入：
NPC	STD_LOGIC_VECTOR(15 DOWNTO 0)

A	STD_LOGIC_VECTOR(15 DOWNTO 0)

adderOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

PCctrl	STD_LOGIC_VECTOR(1 DOWNTO 0)
0X	NPC
10	A
11	adderOUT

输出：
PCIN	STD_LOGIC_VECTOR(15 DOWNTO 0)



MEMMUX模块：
输入：
ALUOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

DataOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

ACCMEM	STD_LOGIC
0	ALUOUT
1	MEMOUT

输出：
MEMOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)



RF模块：
输入：
regWE	STD_LOGIC
寄存器写使能

RFctrl	STD_LOGIC_VECTOR(2 DOWNTO 0)
000	NONE
001	取R[I[10-8]]的值，从A口输出
010	取R[I[10-8]]、R[I[7-5]]的值，分别从A、B口输出
011	取R[I[7-5]]的值，从A口输出
100	取SP的值，从A口输出
101	取RA的值，从A口输出
110	取IH的值，从A口输出
111	取SP的值，从A口输出，再取R[I[10-8]]的值，从B口输出

MEMOUT	STD_LOGIC_VECTOR(15 DOWNTO 0)

Rd	STD_LOGIC_VECTOR(3 DOWNTO 0)
0000	R0
0001	R1
0010	R2
0011	R3
0100	R4
0101	R5
0110	R6
0111	R7
1000	SP
1001	IH
1010	RA
OTHERS	NONE

Inst	STD_LOGIC_VECTOR(5 DOWNTO 0)	取Inst[10-5]

clk	STD_LOGIC

rst	STD_LOGIC

输出
A	STD_LOGIC_VECTOR(15 DOWNTO 0)

B	STD_LOGIC_VECTOR(15 DOWNTO 0)